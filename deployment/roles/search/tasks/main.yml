
- name: Apache Solr | Create user solr
  sudo: yes
  user: name=solr createhome=yes

- name: Apache Solr | Download the distribution package
  sudo: yes
  sudo_user: solr
  get_url: url={{ apache_mirror }}{{ solr_package }}
           dest=/home/{{ solr_user }}/solr.tgz mode=0644

- name: Apache Solr | Create Solr directory
  sudo: yes
  file: path={{ solr_path }}
        state=directory
        owner=solr group=solr mode=0755

- name: Apache Solr | Unpack the distribution package
  sudo: yes
  sudo_user: "{{ solr_user }}"
  command: tar xzvf /home/{{ solr_user }}/solr.tgz --strip 1 -C {{ solr_path }}
           creates={{ solr_path }}/example/start.jar

- name: Apache Solr | Schema permissions
  sudo: yes
  file: path={{ solr_path }}/example/solr/collection1/conf/schema.xml
        owner={{ solr_user }} group={{ app_user }} mode=0664

- name: Apache Solr | Setup logging
  sudo: yes
  sudo_user: "{{ solr_user }}"
  template: src=roles/search/templates/log4j.properties.j2
            dest={{ solr_path }}/example/resources/log4j.properties

- name: Voikko | Download language dictionaries
  sudo: yes
  sudo_user: "{{ solr_user }}"
  get_url: url={{ voikko_dict_baseurl }}/{{ item.filename }}
           dest=/home/{{ solr_user }} mode=0644
           sha256sum={{ item.checksum }}
  with_items: voikko_dicts

- name: Voikko | Create dictionary directory
  sudo: yes
  file: path=/etc/voikko
        state=directory

- name: Voikko | Create solr lib directory
  sudo: yes
  file: path={{ solr_path }}/example/solr/lib
        owner={{ solr_user }} group={{ solr_user }} mode=0755
        state=directory

- name: Voikko | Extract language dictionaries
  sudo: yes
  command: unzip -o {{ item.filename }} -d /etc/voikko
           chdir=/home/{{ solr_user }}
           creates=/etc/voikko/2/{{ item.out_dir }}
  with_items: voikko_dicts

- name: Voikko | Copy VoikkoSolr library jars
  sudo: yes
  sudo_user: "{{ solr_user }}"
  copy: src=files/lib/{{ item }} dest={{ solr_path }}/example/solr/lib
  with_items: voikko_libs

- name: Apache Solr | Generate Solr schema from Django Haystack template
  sudo: yes
  sudo_user: "{{ app_user }}"
  command: >
    {{ venv }}/exec /vagrant/manage.py build_solr_schema
    -f {{ solr_path }}/example/solr/collection1/conf/schema.xml

- name: Apache Solr | Install solr start script
  sudo: yes
  template: src=roles/search/templates/start_solr.sh.j2
            dest={{ solr_path }}/example/start_solr.sh
            owner={{ solr_user }} group={{ solr_user }} mode=0744

- name: Apache Solr | Install solr upstart script
  sudo: yes
  sudo_user: root
  template: src=roles/search/templates/solr.conf.j2
            dest=/etc/init/solr.conf owner=root group=root mode=0644

- name: Apache Solr | Ensure Solr is using new configuration and running
  sudo: yes
  service: name=solr state=restarted

- name: Apache Solr | Wait until Solr is ready
  wait_for: host={{ solr_host }} port={{ solr_port }} delay=10

- name: Apache Solr | Check document count
  shell: >
    curl -s 'http://{{ solr_host }}:{{ solr_port }}/solr/select?q=*:*&rows=0'
    | grep 'numFound="0"'
  ignore_errors: True
  register: solr_empty_index

- name: Haystack | Index all documents
  command: "{{ venv }}/exec /vagrant/manage.py rebuild_index --noinput"
  when: solr_empty_index|success
